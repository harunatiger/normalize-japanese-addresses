{"version":3,"file":"main-node-esm.mjs","sources":["../node_modules/tslib/tslib.es6.js","../src/config.ts","../src/lib/kan2num.ts","../src/lib/zen2han.ts","../src/lib/patchAddr.ts","../src/lib/dictionaries/jisDai2.ts","../src/lib/dictionaries/dictionary.ts","../src/lib/dictionaries/convert.ts","../src/lib/dict.ts","../src/lib/cacheRegexes.ts","../src/lib/normalizeHelpers.ts","../src/types.ts","../src/lib/utils.ts","../src/normalize.ts","../src/main-node.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","import { Config } from './normalize'\n\n// export const defaultEndpoint = 'http://localhost:8080/api/ja'\nexport const defaultEndpoint =\n  'https://japanese-addresses-v2.geoloniamaps.com/api/ja'\n\nexport const currentConfig: Config = {\n  japaneseAddressesApi: defaultEndpoint,\n  cacheSize: 1_000,\n}\n\nexport type FetchOptions = {\n  offset?: number\n  length?: number\n}\n\nexport type FetchResponseLike = {\n  json: () => Promise<unknown>\n  text: () => Promise<string>\n  ok: boolean\n}\n\nexport type FetchLike = (\n  input: string,\n  options?: FetchOptions,\n) => Promise<FetchResponseLike>\n\n/**\n * @internal\n */\nexport const __internals: { fetch: FetchLike } = {\n  // default fetch\n  fetch: (input: string, options) => {\n    const o = options || {}\n    let url = new URL(\n      `${currentConfig.japaneseAddressesApi}${input}`,\n    ).toString()\n    if (currentConfig.geoloniaApiKey) {\n      url += `?geolonia-api-key=${currentConfig.geoloniaApiKey}`\n    }\n    const headers: HeadersInit = {}\n    if (typeof o.length !== 'undefined' && typeof o.offset !== 'undefined') {\n      headers['Range'] = `bytes=${o.offset}-${o.offset + o.length - 1}`\n    }\n    let globalFetch: typeof fetch\n    if (typeof fetch !== 'undefined') {\n      globalFetch = fetch\n    } else if (typeof window !== 'undefined') {\n      globalFetch = window.fetch\n    } else {\n      throw new Error('fetch is not available in this environment')\n    }\n    return globalFetch(url, {\n      headers,\n    })\n  },\n}\n","import { kanji2number, findKanjiNumbers } from '@geolonia/japanese-numeral'\n\nexport const kan2num = (string: string) => {\n  const kanjiNumbers = findKanjiNumbers(string)\n  for (let i = 0; i < kanjiNumbers.length; i++) {\n    try {\n      // @ts-ignore\n      string = string.replace(kanjiNumbers[i], kanji2number(kanjiNumbers[i]))\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    } catch (error) {\n      // ignore\n    }\n  }\n\n  return string\n}\n","export const zen2han = (str: string) => {\n  return str.replace(/[Ａ-Ｚａ-ｚ０-９]/g, (s) => {\n    return String.fromCharCode(s.charCodeAt(0) - 0xfee0)\n  })\n}\n","const addrPatches = [\n  {\n    pref: '香川県',\n    city: '仲多度郡まんのう町',\n    town: '勝浦',\n    pattern: '^字?家[6六]',\n    result: '家六',\n  },\n  {\n    pref: '愛知県',\n    city: 'あま市',\n    town: '西今宿',\n    pattern: '^字?梶村[1一]',\n    result: '梶村一',\n  },\n  {\n    pref: '香川県',\n    city: '丸亀市',\n    town: '原田町',\n    pattern: '^字?東三分[1一]',\n    result: '東三分一',\n  },\n]\n\nexport const patchAddr = (\n  prefName: string,\n  cityName: string,\n  townName: string,\n  addr: string,\n): string => {\n  let _addr = addr\n  for (let i = 0; i < addrPatches.length; i++) {\n    const patch = addrPatches[i]\n    if (\n      patch.pref === prefName &&\n      patch.city === cityName &&\n      patch.town === townName\n    ) {\n      _addr = _addr.replace(new RegExp(patch.pattern), patch.result)\n    }\n  }\n\n  return _addr\n}\n","import { Dictionary } from './dictionary'\n\n// JIS 第2水準 => 第1水準 及び 旧字体 => 新字体\nexport const jisDai2Dictionary: Dictionary[] = [\n  { src: '亞', dst: '亜' },\n  { src: '圍', dst: '囲' },\n  { src: '壹', dst: '壱' },\n  { src: '榮', dst: '栄' },\n  { src: '驛', dst: '駅' },\n  { src: '應', dst: '応' },\n  { src: '櫻', dst: '桜' },\n  { src: '假', dst: '仮' },\n  { src: '會', dst: '会' },\n  { src: '懷', dst: '懐' },\n  { src: '覺', dst: '覚' },\n  { src: '樂', dst: '楽' },\n  { src: '陷', dst: '陥' },\n  { src: '歡', dst: '歓' },\n  { src: '氣', dst: '気' },\n  { src: '戲', dst: '戯' },\n  { src: '據', dst: '拠' },\n  { src: '挾', dst: '挟' },\n  { src: '區', dst: '区' },\n  { src: '徑', dst: '径' },\n  { src: '溪', dst: '渓' },\n  { src: '輕', dst: '軽' },\n  { src: '藝', dst: '芸' },\n  { src: '儉', dst: '倹' },\n  { src: '圈', dst: '圏' },\n  { src: '權', dst: '権' },\n  { src: '嚴', dst: '厳' },\n  { src: '恆', dst: '恒' },\n  { src: '國', dst: '国' },\n  { src: '齋', dst: '斎' },\n  { src: '雜', dst: '雑' },\n  { src: '蠶', dst: '蚕' },\n  { src: '殘', dst: '残' },\n  { src: '兒', dst: '児' },\n  { src: '實', dst: '実' },\n  { src: '釋', dst: '釈' },\n  { src: '從', dst: '従' },\n  { src: '縱', dst: '縦' },\n  { src: '敍', dst: '叙' },\n  { src: '燒', dst: '焼' },\n  { src: '條', dst: '条' },\n  { src: '剩', dst: '剰' },\n  { src: '壤', dst: '壌' },\n  { src: '釀', dst: '醸' },\n  { src: '眞', dst: '真' },\n  { src: '盡', dst: '尽' },\n  { src: '醉', dst: '酔' },\n  { src: '髓', dst: '髄' },\n  { src: '聲', dst: '声' },\n  { src: '竊', dst: '窃' },\n  { src: '淺', dst: '浅' },\n  { src: '錢', dst: '銭' },\n  { src: '禪', dst: '禅' },\n  { src: '爭', dst: '争' },\n  { src: '插', dst: '挿' },\n  { src: '騷', dst: '騒' },\n  { src: '屬', dst: '属' },\n  { src: '對', dst: '対' },\n  { src: '滯', dst: '滞' },\n  { src: '擇', dst: '択' },\n  { src: '單', dst: '単' },\n  { src: '斷', dst: '断' },\n  { src: '癡', dst: '痴' },\n  { src: '鑄', dst: '鋳' },\n  { src: '敕', dst: '勅' },\n  { src: '鐵', dst: '鉄' },\n  { src: '傳', dst: '伝' },\n  { src: '黨', dst: '党' },\n  { src: '鬪', dst: '闘' },\n  { src: '屆', dst: '届' },\n  { src: '腦', dst: '脳' },\n  { src: '廢', dst: '廃' },\n  { src: '發', dst: '発' },\n  { src: '蠻', dst: '蛮' },\n  { src: '拂', dst: '払' },\n  { src: '邊', dst: '辺' },\n  { src: '瓣', dst: '弁' },\n  { src: '寶', dst: '宝' },\n  { src: '沒', dst: '没' },\n  { src: '滿', dst: '満' },\n  { src: '藥', dst: '薬' },\n  { src: '餘', dst: '余' },\n  { src: '樣', dst: '様' },\n  { src: '亂', dst: '乱' },\n  { src: '兩', dst: '両' },\n  { src: '禮', dst: '礼' },\n  { src: '靈', dst: '霊' },\n  { src: '爐', dst: '炉' },\n  { src: '灣', dst: '湾' },\n  { src: '惡', dst: '悪' },\n  { src: '醫', dst: '医' },\n  { src: '飮', dst: '飲' },\n  { src: '營', dst: '営' },\n  { src: '圓', dst: '円' },\n  { src: '歐', dst: '欧' },\n  { src: '奧', dst: '奥' },\n  { src: '價', dst: '価' },\n  { src: '繪', dst: '絵' },\n  { src: '擴', dst: '拡' },\n  { src: '學', dst: '学' },\n  { src: '罐', dst: '缶' },\n  { src: '勸', dst: '勧' },\n  { src: '觀', dst: '観' },\n  { src: '歸', dst: '帰' },\n  { src: '犧', dst: '犠' },\n  { src: '擧', dst: '挙' },\n  { src: '狹', dst: '狭' },\n  { src: '驅', dst: '駆' },\n  { src: '莖', dst: '茎' },\n  { src: '經', dst: '経' },\n  { src: '繼', dst: '継' },\n  { src: '缺', dst: '欠' },\n  { src: '劍', dst: '剣' },\n  { src: '檢', dst: '検' },\n  { src: '顯', dst: '顕' },\n  { src: '廣', dst: '広' },\n  { src: '鑛', dst: '鉱' },\n  { src: '碎', dst: '砕' },\n  { src: '劑', dst: '剤' },\n  { src: '參', dst: '参' },\n  { src: '慘', dst: '惨' },\n  { src: '絲', dst: '糸' },\n  { src: '辭', dst: '辞' },\n  { src: '舍', dst: '舎' },\n  { src: '壽', dst: '寿' },\n  { src: '澁', dst: '渋' },\n  { src: '肅', dst: '粛' },\n  { src: '將', dst: '将' },\n  { src: '證', dst: '証' },\n  { src: '乘', dst: '乗' },\n  { src: '疊', dst: '畳' },\n  { src: '孃', dst: '嬢' },\n  { src: '觸', dst: '触' },\n  { src: '寢', dst: '寝' },\n  { src: '圖', dst: '図' },\n  { src: '穗', dst: '穂' },\n  { src: '樞', dst: '枢' },\n  { src: '齊', dst: '斉' },\n  { src: '攝', dst: '摂' },\n  { src: '戰', dst: '戦' },\n  { src: '潛', dst: '潜' },\n  { src: '雙', dst: '双' },\n  { src: '莊', dst: '荘' },\n  { src: '裝', dst: '装' },\n  { src: '藏', dst: '蔵' },\n  { src: '續', dst: '続' },\n  { src: '體', dst: '体' },\n  { src: '臺', dst: '台' },\n  { src: '澤', dst: '沢' },\n  { src: '膽', dst: '胆' },\n  { src: '彈', dst: '弾' },\n  { src: '蟲', dst: '虫' },\n  { src: '廳', dst: '庁' },\n  { src: '鎭', dst: '鎮' },\n  { src: '點', dst: '点' },\n  { src: '燈', dst: '灯' },\n  { src: '盜', dst: '盗' },\n  { src: '獨', dst: '独' },\n  { src: '貳', dst: '弐' },\n  { src: '霸', dst: '覇' },\n  { src: '賣', dst: '売' },\n  { src: '髮', dst: '髪' },\n  { src: '祕', dst: '秘' },\n  { src: '佛', dst: '仏' },\n  { src: '變', dst: '変' },\n  { src: '辯', dst: '弁' },\n  { src: '豐', dst: '豊' },\n  { src: '飜', dst: '翻' },\n  { src: '默', dst: '黙' },\n  { src: '與', dst: '与' },\n  { src: '譽', dst: '誉' },\n  { src: '謠', dst: '謡' },\n  { src: '覽', dst: '覧' },\n  { src: '獵', dst: '猟' },\n  { src: '勵', dst: '励' },\n  { src: '齡', dst: '齢' },\n  { src: '勞', dst: '労' },\n  { src: '壓', dst: '圧' },\n  { src: '爲', dst: '為' },\n  { src: '隱', dst: '隠' },\n  { src: '衞', dst: '衛' },\n  { src: '鹽', dst: '塩' },\n  { src: '毆', dst: '殴' },\n  { src: '穩', dst: '穏' },\n  { src: '畫', dst: '画' },\n  { src: '壞', dst: '壊' },\n  { src: '殼', dst: '殻' },\n  { src: '嶽', dst: '岳' },\n  { src: '卷', dst: '巻' },\n  { src: '關', dst: '関' },\n  { src: '顏', dst: '顔' },\n  { src: '僞', dst: '偽' },\n  { src: '舊', dst: '旧' },\n  { src: '峽', dst: '峡' },\n  { src: '曉', dst: '暁' },\n  { src: '勳', dst: '勲' },\n  { src: '惠', dst: '恵' },\n  { src: '螢', dst: '蛍' },\n  { src: '鷄', dst: '鶏' },\n  { src: '縣', dst: '県' },\n  { src: '險', dst: '険' },\n  { src: '獻', dst: '献' },\n  { src: '驗', dst: '験' },\n  { src: '效', dst: '効' },\n  { src: '號', dst: '号' },\n  { src: '濟', dst: '済' },\n  { src: '册', dst: '冊' },\n  { src: '棧', dst: '桟' },\n  { src: '贊', dst: '賛' },\n  { src: '齒', dst: '歯' },\n  { src: '濕', dst: '湿' },\n  { src: '寫', dst: '写' },\n  { src: '收', dst: '収' },\n  { src: '獸', dst: '獣' },\n  { src: '處', dst: '処' },\n  { src: '稱', dst: '称' },\n  { src: '奬', dst: '奨' },\n  { src: '淨', dst: '浄' },\n  { src: '繩', dst: '縄' },\n  { src: '讓', dst: '譲' },\n  { src: '囑', dst: '嘱' },\n  { src: '愼', dst: '慎' },\n  { src: '粹', dst: '粋' },\n  { src: '隨', dst: '随' },\n  { src: '數', dst: '数' },\n  { src: '靜', dst: '静' },\n  { src: '專', dst: '専' },\n  { src: '踐', dst: '践' },\n  { src: '纖', dst: '繊' },\n  { src: '壯', dst: '壮' },\n  { src: '搜', dst: '捜' },\n  { src: '總', dst: '総' },\n  { src: '臟', dst: '臓' },\n  { src: '墮', dst: '堕' },\n  { src: '帶', dst: '帯' },\n  { src: '瀧', dst: '滝' },\n  { src: '擔', dst: '担' },\n  { src: '團', dst: '団' },\n  { src: '遲', dst: '遅' },\n  { src: '晝', dst: '昼' },\n  { src: '聽', dst: '聴' },\n  { src: '遞', dst: '逓' },\n  { src: '轉', dst: '転' },\n  { src: '當', dst: '当' },\n  { src: '稻', dst: '稲' },\n  { src: '讀', dst: '読' },\n  { src: '惱', dst: '悩' },\n  { src: '拜', dst: '拝' },\n  { src: '麥', dst: '麦' },\n  { src: '拔', dst: '抜' },\n  { src: '濱', dst: '浜' },\n  { src: '竝', dst: '並' },\n  { src: '辨', dst: '弁' },\n  { src: '舖', dst: '舗' },\n  { src: '襃', dst: '褒' },\n  { src: '萬', dst: '万' },\n  { src: '譯', dst: '訳' },\n  { src: '豫', dst: '予' },\n  { src: '搖', dst: '揺' },\n  { src: '來', dst: '来' },\n  { src: '龍', dst: '竜' },\n  { src: '壘', dst: '塁' },\n  { src: '隸', dst: '隷' },\n  { src: '戀', dst: '恋' },\n  { src: '樓', dst: '楼' },\n  { src: '鰺', dst: '鯵' },\n  { src: '鶯', dst: '鴬' },\n  { src: '蠣', dst: '蛎' },\n  { src: '攪', dst: '撹' },\n  { src: '竈', dst: '竃' },\n  { src: '灌', dst: '潅' },\n  { src: '諫', dst: '諌' },\n  { src: '頸', dst: '頚' },\n  { src: '礦', dst: '砿' },\n  { src: '蘂', dst: '蕊' },\n  { src: '靱', dst: '靭' },\n  { src: '賤', dst: '賎' },\n  { src: '壺', dst: '壷' },\n  { src: '礪', dst: '砺' },\n  { src: '檮', dst: '梼' },\n  { src: '濤', dst: '涛' },\n  { src: '邇', dst: '迩' },\n  { src: '蠅', dst: '蝿' },\n  { src: '檜', dst: '桧' },\n  { src: '儘', dst: '侭' },\n  { src: '藪', dst: '薮' },\n  { src: '籠', dst: '篭' },\n  { src: '彌', dst: '弥' },\n  { src: '麩', dst: '麸' },\n  { src: '驒', dst: '騨' },\n]\n","import { jisDai2Dictionary } from './jisDai2'\n\nexport type Dictionary = { src: string; dst: string }\n\nexport const dictionary = [\n  jisDai2Dictionary,\n  // Add more dictionary here\n  // exmapleDictionary,\n].flat()\n","import { dictionary } from './dictionary'\n\ntype PatternMap = { [key: string]: string }\nconst patternMap = dictionary.reduce((acc: PatternMap, dictionary) => {\n  const pattern = `(${dictionary.src}|${dictionary.dst})`\n  // { 亞: '(亞|亜)', 亜: '(亞|亜)', 圍: '(圍|囲)', 囲: '(圍|囲)', ...}\n  return { ...acc, [dictionary.src]: pattern, [dictionary.dst]: pattern }\n}, {})\n\nconst regexp = new RegExp(\n  Array.from(new Set(Object.values(patternMap))).join('|'),\n  'g',\n)\n\nexport const convert = (regexText: string) =>\n  regexText.replace(regexp, (match) => patternMap[match])\n","import { convert } from './dictionaries/convert'\n\nexport const toRegexPattern = (string: string) => {\n  let _str = string\n\n  // 以下なるべく文字数が多いものほど上にすること\n  _str = _str\n    .replace(/三栄町|四谷三栄町/g, '(三栄町|四谷三栄町)')\n    .replace(/鬮野川|くじ野川|くじの川/g, '(鬮野川|くじ野川|くじの川)')\n    .replace(/柿碕町|柿さき町/g, '(柿碕町|柿さき町)')\n    .replace(/通り|とおり/g, '(通り|とおり)')\n    .replace(/埠頭|ふ頭/g, '(埠頭|ふ頭)')\n    .replace(/番町|番丁/g, '(番町|番丁)')\n    .replace(/大冝|大宜/g, '(大冝|大宜)')\n    .replace(/穝|さい/g, '(穝|さい)')\n    .replace(/杁|えぶり/g, '(杁|えぶり)')\n    .replace(/薭|稗|ひえ|ヒエ/g, '(薭|稗|ひえ|ヒエ)')\n    .replace(/[之ノの]/g, '[之ノの]')\n    .replace(/[ヶケが]/g, '[ヶケが]')\n    .replace(/[ヵカか力]/g, '[ヵカか力]')\n    .replace(/[ッツっつ]/g, '[ッツっつ]')\n    .replace(/[ニ二]/g, '[ニ二]')\n    .replace(/[ハ八]/g, '[ハ八]')\n    .replace(/塚|塚/g, '(塚|塚)')\n    .replace(/釜|竈/g, '(釜|竈)')\n    .replace(/條|条/g, '(條|条)')\n    .replace(/狛|拍/g, '(狛|拍)')\n    .replace(/藪|薮/g, '(藪|薮)')\n    .replace(/渕|淵/g, '(渕|淵)')\n    .replace(/エ|ヱ|え/g, '(エ|ヱ|え)')\n    .replace(/曾|曽/g, '(曾|曽)')\n    .replace(/舟|船/g, '(舟|船)')\n    .replace(/莵|菟/g, '(莵|菟)')\n    .replace(/市|巿/g, '(市|巿)')\n    .replace(/崎|﨑/g, '(崎|﨑)')\n\n  _str = convert(_str)\n\n  return _str\n}\n","import { toRegexPattern } from './dict'\nimport { kan2num } from './kan2num'\nimport Papaparse from 'papaparse'\nimport { LRUCache } from 'lru-cache'\nimport { currentConfig, __internals } from '../config'\nimport { findKanjiNumbers, kanji2number } from '@geolonia/japanese-numeral'\nimport {\n  cityName,\n  LngLat,\n  MachiAzaApi,\n  machiAzaName,\n  PrefectureApi,\n  prefectureName,\n  SingleChiban,\n  SingleCity,\n  SingleMachiAza,\n  SinglePrefecture,\n  SingleRsdt,\n} from '@geolonia/japanese-addresses-v2'\n\nexport type PrefectureList = PrefectureApi\n// interface SingleTown {\n//   town: string\n//   originalTown?: string\n//   koaza: string\n//   lat: string\n//   lng: string\n// }\ntype SingleTown = SingleMachiAza\nexport type TownList = MachiAzaApi\ninterface SingleAddr {\n  addr: string\n  lat: string | null\n  lng: string | null\n}\nexport type AddrList = SingleAddr[]\n\nconst cache = new LRUCache({\n  max: currentConfig.cacheSize,\n})\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nasync function fetchFromCache<T extends {}>(\n  key: string,\n  fetcher: () => Promise<T>,\n): Promise<T> {\n  let data = cache.get(key) as T | undefined\n  if (typeof data !== 'undefined') {\n    return data\n  }\n  data = await fetcher()\n  cache.set(key, data)\n  return data\n}\n\nlet cachedPrefecturePatterns: [SinglePrefecture, string][] | undefined =\n  undefined\nconst cachedCityPatterns: Map<number, [SingleCity, string][]> = new Map()\nlet cachedPrefectures: PrefectureList | undefined = undefined\nconst cachedTowns: { [key: string]: TownList } = {}\nlet cachedSameNamedPrefectureCityRegexPatterns: [string, string][] | undefined =\n  undefined\n\nexport const getPrefectures = async () => {\n  if (typeof cachedPrefectures !== 'undefined') {\n    return cachedPrefectures\n  }\n\n  const prefsResp = await __internals.fetch('.json', {}) // ja.json\n  const data = (await prefsResp.json()) as PrefectureApi\n  return cachePrefectures(data)\n}\n\nexport const cachePrefectures = (data: PrefectureList) => {\n  return (cachedPrefectures = data)\n}\n\nexport const getPrefectureRegexPatterns = (api: PrefectureApi) => {\n  if (cachedPrefecturePatterns) {\n    return cachedPrefecturePatterns\n  }\n\n  const data = api.data\n  cachedPrefecturePatterns = data.map<[SinglePrefecture, string]>((pref) => {\n    const _pref = pref.pref.replace(/(都|道|府|県)$/, '') // `東京` の様に末尾の `都府県` が抜けた住所に対応\n    const pattern = `^${_pref}(都|道|府|県)?`\n    return [pref, pattern]\n  })\n\n  return cachedPrefecturePatterns\n}\n\nexport const getCityRegexPatterns = (pref: SinglePrefecture) => {\n  const cachedResult = cachedCityPatterns.get(pref.code)\n  if (typeof cachedResult !== 'undefined') {\n    return cachedResult\n  }\n\n  const cities = pref.cities\n  // 少ない文字数の地名に対してミスマッチしないように文字の長さ順にソート\n  cities.sort((a, b) => {\n    return cityName(a).length - cityName(b).length\n  })\n\n  const patterns = cities.map<[SingleCity, string]>((city) => {\n    const name = cityName(city)\n    let pattern = `^${toRegexPattern(name)}`\n    if (name.match(/(町|村)$/)) {\n      pattern = `^${toRegexPattern(name).replace(/(.+?)郡/, '($1郡)?')}` // 郡が省略されてるかも\n    }\n    return [city, pattern]\n  })\n\n  cachedCityPatterns.set(pref.code, patterns)\n  return patterns\n}\n\nexport const getTowns = async (\n  prefObj: SinglePrefecture,\n  cityObj: SingleCity,\n  apiVersion: number,\n) => {\n  const pref = prefectureName(prefObj)\n  const city = cityName(cityObj)\n\n  const cacheKey = `${pref}-${city}`\n  const cachedTown = cachedTowns[cacheKey]\n  if (typeof cachedTown !== 'undefined') {\n    return cachedTown\n  }\n\n  const townsResp = await __internals.fetch(\n    ['', encodeURI(pref), encodeURI(city) + `.json?v=${apiVersion}`].join('/'),\n    {},\n  )\n  const towns = (await townsResp.json()) as MachiAzaApi\n  return (cachedTowns[cacheKey] = towns)\n}\n\ntype MetadataRow = { start: number; length: number }\n\nasync function fetchSubresource(\n  kind: '地番' | '住居表示',\n  pref: SinglePrefecture,\n  city: SingleCity,\n  row: MetadataRow,\n  apiVersion: number,\n) {\n  const prefN = prefectureName(pref)\n  const cityN = cityName(city)\n  const resp = await __internals.fetch(\n    [\n      '',\n      encodeURI(prefN),\n      encodeURI(`${cityN}-${kind}.txt?v=${apiVersion}`),\n    ].join('/'),\n    {\n      offset: row.start,\n      length: row.length,\n    },\n  )\n  return resp.text()\n}\n\ntype RsdtDataRow = {\n  blk_num: string\n  rsdt_num: string\n  rsdt_num2: string\n  lng: string\n  lat: string\n}\ntype ChibanDataRow = {\n  prc_num1: string\n  prc_num2: string\n  prc_num3: string\n  lng: string\n  lat: string\n}\nfunction parseSubresource<T extends SingleRsdt | SingleChiban>(\n  data: string,\n): T[] {\n  const firstLineEnd = data.indexOf('\\n')\n  // const firstLine = data.slice(0, firstLineEnd)\n  const rest = data.slice(firstLineEnd + 1)\n  const lines = Papaparse.parse<RsdtDataRow | ChibanDataRow>(rest, {\n    header: true,\n  }).data\n  const out: T[] = []\n  for (const line of lines) {\n    const point: LngLat | undefined =\n      line.lng && line.lat\n        ? [parseFloat(line.lng), parseFloat(line.lat)]\n        : undefined\n    if ('blk_num' in line) {\n      out.push({\n        blk_num: line.blk_num,\n        rsdt_num: line.rsdt_num,\n        rsdt_num2: line.rsdt_num2,\n        point: point,\n      } as T)\n    } else if ('prc_num1' in line) {\n      out.push({\n        prc_num1: line.prc_num1,\n        prc_num2: line.prc_num2,\n        prc_num3: line.prc_num3,\n        point: point,\n      } as T)\n    }\n  }\n  return out\n}\n\nexport const getRsdt = async (\n  pref: SinglePrefecture,\n  city: SingleCity,\n  town: SingleTown,\n  apiVersion: number,\n) => {\n  const row = town.csv_ranges?.住居表示\n  if (!row) {\n    return []\n  }\n\n  const parsed = await fetchFromCache(\n    `住居表示-${pref.code}-${city.code}-${machiAzaName(town)}`,\n    async () => {\n      const data = await fetchSubresource(\n        '住居表示',\n        pref,\n        city,\n        row,\n        apiVersion,\n      )\n      const parsed = parseSubresource<SingleRsdt>(data)\n      parsed.sort((a, b) => {\n        const aStr = [a.blk_num, a.rsdt_num, a.rsdt_num2]\n          .filter((a) => !!a)\n          .join('-')\n        const bStr = [b.blk_num, b.rsdt_num, b.rsdt_num2]\n          .filter((a) => !!a)\n          .join('-')\n        return bStr.length - aStr.length\n      })\n      return parsed\n    },\n  )\n  return parsed\n}\n\nexport const getChiban = async (\n  pref: SinglePrefecture,\n  city: SingleCity,\n  town: SingleTown,\n  apiVersion: number,\n) => {\n  const row = town.csv_ranges?.地番\n  if (!row) {\n    return []\n  }\n\n  const parsed = await fetchFromCache(\n    `地番-${pref.code}-${city.code}-${machiAzaName(town)}`,\n    async () => {\n      const data = await fetchSubresource('地番', pref, city, row, apiVersion)\n      const parsed = parseSubresource<SingleChiban>(data)\n      parsed.sort((a, b) => {\n        const aStr = [a.prc_num1, a.prc_num2, a.prc_num3]\n          .filter((a) => !!a)\n          .join('-')\n        const bStr = [b.prc_num1, b.prc_num2, b.prc_num3]\n          .filter((a) => !!a)\n          .join('-')\n        return bStr.length - aStr.length\n      })\n      return parsed\n    },\n  )\n\n  return parsed\n}\n\n// 十六町 のように漢数字と町が連結しているか\nconst isKanjiNumberFollewedByCho = (targetTownName: string) => {\n  const xCho = targetTownName.match(/.町/g)\n  if (!xCho) return false\n  const kanjiNumbers = findKanjiNumbers(xCho[0])\n  return kanjiNumbers.length > 0\n}\n\nexport const getTownRegexPatterns = async (\n  pref: SinglePrefecture,\n  city: SingleCity,\n  apiVersion: number,\n) =>\n  fetchFromCache<[SingleTown, string][]>(\n    `${pref.code}-${city.code}`,\n    async () => {\n      const api = await getTowns(pref, city, apiVersion)\n      const pre_towns = api.data\n      const townSet = new Set(pre_towns.map((town) => machiAzaName(town)))\n      const towns: (\n        | SingleMachiAza\n        | (SingleMachiAza & { originalTown: SingleMachiAza })\n      )[] = []\n\n      const isKyoto = city.city === '京都市'\n\n      // 町丁目に「○○町」が含まれるケースへの対応\n      // 通常は「○○町」のうち「町」の省略を許容し同義語として扱うが、まれに自治体内に「○○町」と「○○」が共存しているケースがある。\n      // この場合は町の省略は許容せず、入力された住所は書き分けられているものとして正規化を行う。\n      // 更に、「愛知県名古屋市瑞穂区十六町1丁目」漢数字を含むケースだと丁目や番地・号の正規化が不可能になる。このようなケースも除外。\n      for (const town of pre_towns) {\n        towns.push(town)\n\n        const originalTown = machiAzaName(town)\n        if (originalTown.indexOf('町') === -1) continue\n        const townAbbr = originalTown.replace(/(?!^町)町/g, '') // NOTE: 冒頭の「町」は明らかに省略するべきではないので、除外\n        if (\n          !isKyoto && // 京都は通り名削除の処理があるため、意図しないマッチになるケースがある。これを除く\n          !townSet.has(townAbbr) &&\n          !townSet.has(`大字${townAbbr}`) && // 大字は省略されるため、大字〇〇と〇〇町がコンフリクトする。このケースを除外\n          !isKanjiNumberFollewedByCho(originalTown)\n        ) {\n          // エイリアスとして町なしのパターンを登録\n          towns.push({\n            machiaza_id: town.machiaza_id,\n            point: town.point,\n            oaza_cho: townAbbr,\n            originalTown: town,\n          })\n        }\n      }\n\n      // 少ない文字数の地名に対してミスマッチしないように文字の長さ順にソート\n      towns.sort((a, b) => {\n        let aLen = machiAzaName(a).length\n        let bLen = machiAzaName(b).length\n\n        // 大字で始まる場合、優先度を低く設定する。\n        // 大字XX と XXYY が存在するケースもあるので、 XXYY を先にマッチしたい\n        if (machiAzaName(a).startsWith('大字')) aLen -= 2\n        if (machiAzaName(b).startsWith('大字')) bLen -= 2\n\n        return bLen - aLen\n      })\n\n      const patterns = towns.map<[SingleMachiAza, string]>((town) => {\n        const pattern = toRegexPattern(\n          machiAzaName(town)\n            // 横棒を含む場合（流通センター、など）に対応\n            .replace(/[-－﹣−‐⁃‑‒–—﹘―⎯⏤ーｰ─━]/g, '[-－﹣−‐⁃‑‒–—﹘―⎯⏤ーｰ─━]')\n            .replace(/大?字/g, '(大?字)?')\n            // 以下住所マスターの町丁目に含まれる数字を正規表現に変換する\n            // ABRデータには大文字の数字が含まれている（第１地割、など）ので、数字も一致するようにする\n            .replace(\n              /([壱一二三四五六七八九十]+|[１２３４５６７８９０]+)(丁目?|番(町|丁)|条|軒|線|(の|ノ)町|地割|号)/g,\n              (match: string) => {\n                const patterns = []\n\n                patterns.push(\n                  match\n                    .toString()\n                    .replace(\n                      /(丁目?|番(町|丁)|条|軒|線|(の|ノ)町|地割|号)/,\n                      '',\n                    ),\n                ) // 漢数字\n\n                if (match.match(/^壱/)) {\n                  patterns.push('一')\n                  patterns.push('1')\n                  patterns.push('１')\n                } else {\n                  const num = match\n                    .replace(/([一二三四五六七八九十]+)/g, (match) => {\n                      return kan2num(match)\n                    })\n                    .replace(/([１２３４５６７８９０]+)/g, (match) => {\n                      return kanji2number(match).toString()\n                    })\n                    .replace(/(丁目?|番(町|丁)|条|軒|線|(の|ノ)町|地割|号)/, '')\n\n                  patterns.push(num.toString()) // 半角アラビア数字\n                }\n\n                // 以下の正規表現は、上のよく似た正規表現とは違うことに注意！\n                const _pattern = `(${patterns.join(\n                  '|',\n                )})((丁|町)目?|番(町|丁)|条|軒|線|の町?|地割|号|[-－﹣−‐⁃‑‒–—﹘―⎯⏤ーｰ─━])`\n                // if (city === '下閉伊郡普代村' && town.machiaza_id === '0022000') {\n                //   console.log(_pattern)\n                // }\n                return _pattern // デバッグのときにめんどくさいので変数に入れる。\n              },\n            ),\n        )\n        return ['originalTown' in town ? town.originalTown : town, pattern]\n      })\n\n      // X丁目の丁目なしの数字だけ許容するため、最後に数字だけ追加していく\n      for (const town of towns) {\n        const chomeMatch = machiAzaName(town).match(\n          /([^一二三四五六七八九十]+)([一二三四五六七八九十]+)(丁目?)/,\n        )\n        if (!chomeMatch) {\n          continue\n        }\n        const chomeNamePart = chomeMatch[1]\n        const chomeNum = chomeMatch[2]\n        const pattern = toRegexPattern(\n          `^${chomeNamePart}(${chomeNum}|${kan2num(chomeNum)})`,\n        )\n        patterns.push([town, pattern])\n      }\n\n      return patterns\n    },\n  )\n\nexport const getSameNamedPrefectureCityRegexPatterns = (\n  prefApi: PrefectureApi,\n) => {\n  if (typeof cachedSameNamedPrefectureCityRegexPatterns !== 'undefined') {\n    return cachedSameNamedPrefectureCityRegexPatterns\n  }\n\n  const prefList = prefApi.data\n  const _prefs = prefList.map((pref) => {\n    return pref.pref.replace(/[都|道|府|県]$/, '')\n  })\n\n  cachedSameNamedPrefectureCityRegexPatterns = []\n  for (const pref of prefList) {\n    for (const city of pref.cities) {\n      const cityN = cityName(city)\n\n      // 「福島県石川郡石川町」のように、市の名前が別の都道府県名から始まっているケースも考慮する。\n      for (let j = 0; j < _prefs.length; j++) {\n        if (cityN.indexOf(_prefs[j]) === 0) {\n          cachedSameNamedPrefectureCityRegexPatterns.push([\n            `${pref.pref}${cityN}`,\n            `^${cityN}`,\n          ])\n        }\n      }\n    }\n  }\n\n  return cachedSameNamedPrefectureCityRegexPatterns\n}\n","import { zen2han } from './zen2han'\n\n/**\n * 入力された住所に対して以下の正規化を予め行う。\n *\n * 1. `1-2-3` や `四-五-六` のようなフォーマットのハイフンを半角に統一。\n * 2. 町丁目以前にあるスペースをすべて削除。\n * 3. 最初に出てくる `1-` や `五-` のような文字列を町丁目とみなして、それ以前のスペースをすべて削除する。\n */\nexport function prenormalize(input: string): string {\n  return (\n    input\n      .normalize('NFC')\n      .replace(/　/g, ' ')\n      .replace(/ +/g, ' ')\n      .replace(/([０-９Ａ-Ｚａ-ｚ]+)/g, (match) => {\n        // 全角のアラビア数字は問答無用で半角にする\n        return zen2han(match)\n      })\n      // 数字の後または数字の前にくる横棒はハイフンに統一する\n      .replace(\n        /([0-9０-９一二三四五六七八九〇十百千][-－﹣−‐⁃‑‒–—﹘―⎯⏤ーｰ─━])|([-－﹣−‐⁃‑‒–—﹘―⎯⏤ーｰ─━])[0-9０-９一二三四五六七八九〇十]/g,\n        (match) => {\n          return match.replace(/[-－﹣−‐⁃‑‒–—﹘―⎯⏤ーｰ─━]/g, '-')\n        },\n      )\n      .replace(/(.+)(丁目?|番(町|地|丁)|条|軒|線|(の|ノ)町|地割)/, (match) => {\n        return match.replace(/ /g, '') // 町丁目名以前のスペースはすべて削除\n      })\n      .replace(/(.+)((郡.+(町|村))|((市|巿).+(区|區)))/, (match) => {\n        return match.replace(/ /g, '') // 区、郡以前のスペースはすべて削除\n      })\n      .replace(/.+?[0-9一二三四五六七八九〇十百千]-/, (match) => {\n        return match.replace(/ /g, '') // 1番はじめに出てくるアラビア数字以前のスペースを削除\n      })\n  )\n}\n","import {\n  SingleChiban,\n  SingleCity,\n  SingleMachiAza,\n  SinglePrefecture,\n  SingleRsdt,\n} from '@geolonia/japanese-addresses-v2'\n\n/**\n * 正規化対象の住所の位置情報\n * 位置情報は EPSG:4326 (WGS84) です。\n */\nexport type NormalizeResultPoint = {\n  /// 緯度\n  lat: number\n  /// 経度\n  lng: number\n  /**\n   * 緯度経度の正確さを表すレベル\n   * - 1 - 都道府県の代表点（県庁所在地）の位置\n   * - 2 - 市区町村の代表点（市役所など）の位置\n   * - 3 - 丁目・町字の代表点の位置\n   * - 8 - 住居表示住所または地番の位置\n   */\n  level: number\n}\n\nexport function isNormalizeResultPoint(\n  obj: unknown,\n): obj is NormalizeResultPoint {\n  // Check that obj is an object and not null\n  if (typeof obj !== 'object' || obj === null) {\n    return false\n  }\n\n  // Destructure properties from the object\n  const { lat, lng, level } = obj as { [key: string]: unknown }\n\n  // Check that lat, lng, and level are numbers\n  if (\n    typeof lat !== 'number' ||\n    typeof lng !== 'number' ||\n    typeof level !== 'number'\n  ) {\n    return false\n  }\n\n  // Optionally, validate that level is one of the expected values\n  const validLevels = [1, 2, 3, 8]\n  if (!validLevels.includes(level)) {\n    return false\n  }\n\n  // All checks passed\n  return true\n}\n\nexport function prefectureToResultPoint(\n  pref: SinglePrefecture,\n): NormalizeResultPoint {\n  return {\n    lat: pref.point[1],\n    lng: pref.point[0],\n    level: 1,\n  }\n}\n\nexport function cityToResultPoint(city: SingleCity): NormalizeResultPoint {\n  return {\n    lat: city.point[1],\n    lng: city.point[0],\n    level: 2,\n  }\n}\n\nexport function machiAzaToResultPoint(\n  machiAza: SingleMachiAza,\n): NormalizeResultPoint | undefined {\n  if (!machiAza.point) return undefined\n  return {\n    lat: machiAza.point[1],\n    lng: machiAza.point[0],\n    level: 3,\n  }\n}\n\nexport function rsdtOrChibanToResultPoint(\n  input: SingleRsdt | SingleChiban,\n): NormalizeResultPoint | undefined {\n  if (!input.point) return undefined\n  return {\n    lat: input.point[1],\n    lng: input.point[0],\n    level: 8,\n  }\n}\n\nexport function upgradePoint(\n  a: NormalizeResultPoint | undefined,\n  b: NormalizeResultPoint | undefined,\n): NormalizeResultPoint | undefined {\n  if (!a) return b\n  if (!b) return a\n  if (a.level > b.level) return a\n  return b\n}\n\nexport type NormalizeResultMetadata = {\n  input: string\n\n  /** 都道府県 */\n  prefecture?: Omit<SinglePrefecture, 'cities'>\n  /** 市区町村 */\n  city?: SingleCity\n  /** 町字 */\n  machiAza?: SingleMachiAza\n  /** 丁目 */\n  chiban?: SingleChiban\n  /** 住居表示住所 */\n  rsdt?: SingleRsdt\n}\n\nexport type NormalizeResult = {\n  /** 都道府県 */\n  pref?: string\n  /** 市区町村 */\n  city?: string\n  /**\n   * 丁目・町字\n   * 丁目の場合は、丁目名の後に漢数字で丁目が付与される。\n   * 例：「青葉一丁目」\n   */\n  town?: string\n  /** 住居表示または地番 */\n  addr?: string\n  /** 正規化後の住所文字列。完全に正規化された場合は、空の文字列が入ります。 */\n  other: string\n\n  /**\n   * 住所の緯度経度\n   * 注意: 正規化レベルが8でも、位置情報は8でもない場合もあります。\n   */\n  point?: NormalizeResultPoint\n\n  /**\n   * 住所文字列をどこまで判別できたかを表す正規化レベル\n   * - 0 - 都道府県も判別できなかった。\n   * - 1 - 都道府県まで判別できた。\n   * - 2 - 市区町村まで判別できた。\n   * - 3 - 丁目・町字まで判別できた。\n   * - 8 - 住居表示住所または地番の判別ができた。\n   */\n  level: number\n\n  /** 追加情報 */\n  metadata: NormalizeResultMetadata\n}\n","import {\n  SingleCity,\n  SingleMachiAza,\n  SinglePrefecture,\n} from '@geolonia/japanese-addresses-v2'\n\nexport function removeCitiesFromPrefecture(\n  pref: SinglePrefecture | undefined,\n): Omit<SinglePrefecture, 'cities'> | undefined {\n  if (!pref) {\n    return undefined\n  }\n\n  const newPref: Omit<SinglePrefecture, 'cities'> & { cities?: SingleCity[] } =\n    {\n      ...pref,\n    }\n  delete newPref.cities\n  return newPref\n}\n\nexport function removeExtraFromMachiAza(\n  machiAza: SingleMachiAza | undefined,\n): Omit<SingleMachiAza, 'csv_ranges'> | undefined {\n  if (!machiAza) {\n    return undefined\n  }\n\n  const newMachiAza: SingleMachiAza = { ...machiAza }\n  delete newMachiAza.csv_ranges\n  return newMachiAza\n}\n","import { number2kanji } from '@geolonia/japanese-numeral'\nimport { currentConfig } from './config'\nimport { kan2num } from './lib/kan2num'\nimport { zen2han } from './lib/zen2han'\nimport { patchAddr } from './lib/patchAddr'\nimport {\n  getPrefectures,\n  getPrefectureRegexPatterns,\n  getCityRegexPatterns,\n  getTownRegexPatterns,\n  getSameNamedPrefectureCityRegexPatterns,\n  getRsdt,\n  getChiban,\n} from './lib/cacheRegexes'\nimport {\n  chibanToString,\n  cityName,\n  machiAzaName,\n  prefectureName,\n  rsdtToString,\n  SingleChiban,\n  SingleCity,\n  SingleMachiAza,\n  SinglePrefecture,\n  SingleRsdt,\n} from '@geolonia/japanese-addresses-v2'\nimport { prenormalize } from './lib/normalizeHelpers'\nimport {\n  cityToResultPoint,\n  machiAzaToResultPoint,\n  NormalizeResult,\n  NormalizeResultPoint,\n  prefectureToResultPoint,\n  rsdtOrChibanToResultPoint,\n  upgradePoint,\n} from './types'\nimport {\n  removeCitiesFromPrefecture,\n  removeExtraFromMachiAza,\n} from './lib/utils'\n\nexport type TransformRequestQuery = {\n  level: number //  level = -1 は旧 API。 transformRequestFunction を設定しても無視する\n  pref?: string\n  city?: string\n  town?: string\n}\n\nconst __VERSION__: string = 'dev'\nexport const version = __VERSION__\n\n/**\n * normalize {@link Normalizer} の動作オプション。\n */\nexport interface Config {\n  /** 住所データを URL 形式で指定。 file:// 形式で指定するとローカルファイルを参照できます。 */\n  japaneseAddressesApi: string\n\n  /** 内部キャッシュの最大サイズ。デフォルトでは 1,000 件 */\n  cacheSize: number\n\n  geoloniaApiKey?: string\n}\nexport const config: Config = currentConfig\n\n/**\n * 正規化関数の {@link normalize} のオプション\n */\nexport interface Option {\n  /**\n   * 希望最大正規化を行うレベルを指定します。{@link Option.level}\n   *\n   * @see https://github.com/geolonia/normalize-japanese-addresses#normalizeaddress-string\n   */\n  level?: number\n\n  geoloniaApiKey?: string\n}\n\n/**\n * 住所を正規化します。\n *\n * @param input - 住所文字列\n * @param option -  正規化のオプション {@link Option}\n *\n * @returns 正規化結果のオブジェクト {@link NormalizeResult}\n *\n * @see https://github.com/geolonia/normalize-japanese-addresses#normalizeaddress-string\n */\nexport type Normalizer = (\n  input: string,\n  option?: Option,\n) => Promise<NormalizeResult>\n\nconst defaultOption = {\n  level: 8,\n}\n\nconst normalizeTownName = async (\n  input: string,\n  pref: SinglePrefecture,\n  city: SingleCity,\n  apiVersion: number,\n) => {\n  input = input.trim().replace(/^大字/, '')\n  const townPatterns = await getTownRegexPatterns(pref, city, apiVersion)\n\n  const regexPrefixes = ['^']\n  if (city.city === '京都市') {\n    // 京都は通り名削除のために後方一致を使う\n    regexPrefixes.push('.*')\n  }\n\n  for (const regexPrefix of regexPrefixes) {\n    for (const [town, pattern] of townPatterns) {\n      const regex = new RegExp(`${regexPrefix}${pattern}`)\n      const match = input.match(regex)\n      if (match) {\n        return {\n          town,\n          other: input.substring(match[0].length),\n        }\n      }\n    }\n  }\n}\n\ntype NormalizedAddrPart = {\n  chiban?: SingleChiban\n  rsdt?: SingleRsdt\n  rest: string\n}\nasync function normalizeAddrPart(\n  addr: string,\n  pref: SinglePrefecture,\n  city: SingleCity,\n  town: SingleMachiAza,\n  apiVersion: number,\n): Promise<NormalizedAddrPart> {\n  const match = addr.match(\n    /^([1-9][0-9]*)(?:-([1-9][0-9]*))?(?:-([1-9][0-9]*))?/,\n  )\n  if (!match) {\n    return {\n      rest: addr,\n    }\n  }\n  // TODO: rsdtの場合はrsdtと地番を両方取得する\n  if (town.rsdt) {\n    const res = await getRsdt(pref, city, town, apiVersion)\n    for (const rsdt of res) {\n      const addrPart = rsdtToString(rsdt)\n      if (match[0] === addrPart) {\n        return {\n          rsdt,\n          rest: addr.substring(addrPart.length),\n        }\n      }\n    }\n  } else {\n    const res = await getChiban(pref, city, town, apiVersion)\n    for (const chiban of res) {\n      const addrPart = chibanToString(chiban)\n      if (match[0] === addrPart) {\n        return {\n          chiban,\n          rest: addr.substring(addrPart.length),\n        }\n      }\n    }\n  }\n  return {\n    rest: addr,\n  }\n}\n\nexport const normalize: Normalizer = async (\n  address,\n  _option = defaultOption,\n) => {\n  const option = { ...defaultOption, ..._option }\n\n  option.geoloniaApiKey ??= config.geoloniaApiKey\n\n  // other に入っている文字列は正規化するときに\n  let other = prenormalize(address)\n\n  let pref: SinglePrefecture | undefined\n  let city: SingleCity | undefined\n  let town: SingleMachiAza | undefined\n  let point: NormalizeResultPoint | undefined\n  let addr: string | undefined\n  let level = 0\n\n  // 都道府県名の正規化\n\n  const prefectures = await getPrefectures()\n  const apiVersion = prefectures.meta.updated\n  const prefPatterns = getPrefectureRegexPatterns(prefectures)\n  const sameNamedPrefectureCityRegexPatterns =\n    getSameNamedPrefectureCityRegexPatterns(prefectures)\n\n  // 県名が省略されており、かつ市の名前がどこかの都道府県名と同じ場合(例.千葉県千葉市)、\n  // あらかじめ県名を補完しておく。\n  for (const [prefectureCity, reg] of sameNamedPrefectureCityRegexPatterns) {\n    const match = other.match(reg)\n    if (match) {\n      other = other.replace(new RegExp(reg), prefectureCity)\n      break\n    }\n  }\n\n  for (const [_pref, pattern] of prefPatterns) {\n    const match = other.match(pattern)\n    if (match) {\n      pref = _pref\n      other = other.substring(match[0].length) // 都道府県名以降の住所\n      point = prefectureToResultPoint(pref)\n      break\n    }\n  }\n\n  if (!pref) {\n    // 都道府県名が省略されている\n    const matched: {\n      pref: SinglePrefecture\n      city: SingleCity\n      other: string\n    }[] = []\n    for (const _pref of prefectures.data) {\n      const cityPatterns = getCityRegexPatterns(_pref)\n\n      other = other.trim()\n      for (const [_city, pattern] of cityPatterns) {\n        const match = other.match(pattern)\n        if (match) {\n          matched.push({\n            pref: _pref,\n            city: _city,\n            other: other.substring(match[0].length),\n          })\n        }\n      }\n    }\n\n    // マッチする都道府県が複数ある場合は町名まで正規化して都道府県名を判別する。（例: 東京都府中市と広島県府中市など）\n    if (1 === matched.length) {\n      pref = matched[0].pref\n    } else {\n      for (const m of matched) {\n        const normalized = await normalizeTownName(\n          m.other,\n          m.pref,\n          m.city,\n          apiVersion,\n        )\n        if (normalized) {\n          pref = m.pref\n          city = m.city\n          town = normalized.town\n          other = normalized.other\n          point = upgradePoint(point, machiAzaToResultPoint(town))\n        }\n      }\n    }\n  }\n\n  if (pref && option.level >= 2) {\n    const cityPatterns = getCityRegexPatterns(pref)\n\n    other = other.trim()\n    for (const [_city, pattern] of cityPatterns) {\n      const match = other.match(pattern)\n      if (match) {\n        city = _city\n        point = upgradePoint(point, cityToResultPoint(city))\n        other = other.substring(match[0].length) // 市区町村名以降の住所\n        break\n      }\n    }\n  }\n\n  // 町丁目以降の正規化\n  if (pref && city && option.level >= 3) {\n    const normalized = await normalizeTownName(other, pref, city, apiVersion)\n    if (normalized) {\n      town = normalized.town\n      other = normalized.other\n      point = upgradePoint(point, machiAzaToResultPoint(town))\n    }\n\n    // townが取得できた場合にのみ、addrに対する各種の変換処理を行う。\n    if (town) {\n      other = other\n        .replace(/^-/, '')\n        .replace(/([0-9]+)(丁目)/g, (match) => {\n          return match.replace(/([0-9]+)/g, (num) => {\n            return number2kanji(Number(num))\n          })\n        })\n        .replace(\n          /(([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)(番地?)([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)号)\\s*(.+)/,\n          '$1 $5',\n        )\n        .replace(\n          /([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)\\s*(番地?)\\s*([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)\\s*号?/,\n          '$1-$3',\n        )\n        .replace(/([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)番(地|$)/, '$1')\n        .replace(/([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)の/g, '$1-')\n        .replace(\n          /([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)[-－﹣−‐⁃‑‒–—﹘―⎯⏤ーｰ─━]/g,\n          (match) => {\n            return kan2num(match).replace(/[-－﹣−‐⁃‑‒–—﹘―⎯⏤ーｰ─━]/g, '-')\n          },\n        )\n        .replace(\n          /[-－﹣−‐⁃‑‒–—﹘―⎯⏤ーｰ─━]([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)/g,\n          (match) => {\n            return kan2num(match).replace(/[-－﹣−‐⁃‑‒–—﹘―⎯⏤ーｰ─━]/g, '-')\n          },\n        )\n        .replace(/([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)-/, (s) => {\n          // `1-` のようなケース\n          return kan2num(s)\n        })\n        .replace(/-([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)/, (s) => {\n          // `-1` のようなケース\n          return kan2num(s)\n        })\n        .replace(/-[^0-9]([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)/, (s) => {\n          // `-あ1` のようなケース\n          return kan2num(zen2han(s))\n        })\n        .replace(/([0-9]+|[〇一二三四五六七八九十百千零壱弐参肆伍陸漆捌玖拾]+)$/, (s) => {\n          // `串本町串本１２３４` のようなケース\n          return kan2num(s)\n        })\n        .trim()\n    }\n  }\n\n  other = patchAddr(\n    pref ? prefectureName(pref) : '',\n    city ? cityName(city) : '',\n    town ? machiAzaName(town) : '',\n    other,\n  )\n\n  if (pref) level = level + 1\n  if (city) level = level + 1\n  if (town) level = level + 1\n\n  if (option.level <= 3 || level < 3) {\n    const result: NormalizeResult = {\n      pref: pref ? prefectureName(pref) : undefined,\n      city: city ? cityName(city) : undefined,\n      town: town ? machiAzaName(town) : undefined,\n      other: other,\n      level,\n      point,\n      metadata: {\n        input: address,\n        prefecture: removeCitiesFromPrefecture(pref),\n        city: city,\n        machiAza: removeExtraFromMachiAza(town),\n      },\n    }\n    return result\n  }\n\n  const normalizedAddrPart = await normalizeAddrPart(\n    other,\n    pref!,\n    city!,\n    town!,\n    apiVersion,\n  )\n  // TODO: rsdtと地番を両方対応した時に両方返すけど、今はrsdtを優先する\n  if (normalizedAddrPart.rsdt) {\n    addr = rsdtToString(normalizedAddrPart.rsdt)\n    other = normalizedAddrPart.rest\n    point = upgradePoint(\n      point,\n      rsdtOrChibanToResultPoint(normalizedAddrPart.rsdt),\n    )\n    level = 8\n  } else if (normalizedAddrPart.chiban) {\n    addr = chibanToString(normalizedAddrPart.chiban)\n    other = normalizedAddrPart.rest\n    point = upgradePoint(\n      point,\n      rsdtOrChibanToResultPoint(normalizedAddrPart.chiban),\n    )\n    level = 8\n  }\n  const result: NormalizeResult = {\n    pref: pref ? prefectureName(pref) : undefined,\n    city: city ? cityName(city) : undefined,\n    town: town ? machiAzaName(town) : undefined,\n    addr,\n    level,\n    point,\n    other,\n    metadata: {\n      input: address,\n      prefecture: removeCitiesFromPrefecture(pref),\n      city: city,\n      machiAza: removeExtraFromMachiAza(town),\n      rsdt: normalizedAddrPart.rsdt,\n      chiban: normalizedAddrPart.chiban,\n    },\n  }\n  return result\n}\n","import * as Normalize from './normalize'\nimport { __internals, FetchOptions, FetchResponseLike } from './config'\nimport { promises as fs } from 'node:fs'\nimport { fetch } from 'undici'\n\nexport type { NormalizeResult } from './types'\n\nexport const requestHandlers = {\n  file: async (fileURL: URL, options?: FetchOptions) => {\n    const o = options || {}\n    const filePath =\n      process.platform === 'win32'\n        ? decodeURI(fileURL.pathname).substring(1)\n        : decodeURI(fileURL.pathname)\n    const f = await fs.open(filePath, 'r')\n    let contents: Buffer, ok: boolean\n    if (typeof o.length !== 'undefined' && typeof o.offset !== 'undefined') {\n      contents = Buffer.alloc(o.length)\n      const resp = await f.read(contents, 0, o.length, o.offset)\n      ok = resp.bytesRead === o.length\n    } else {\n      contents = await f.readFile()\n      ok = true\n    }\n    await f.close()\n    return {\n      json: async () => {\n        return JSON.parse(contents.toString('utf-8'))\n      },\n      text: async () => {\n        return contents.toString('utf-8')\n      },\n      ok,\n    }\n  },\n  http: (fileURL: URL, options?: FetchOptions) => {\n    const o = options || {}\n    if (Normalize.config.geoloniaApiKey) {\n      fileURL.search = `?geolonia-api-key=${Normalize.config.geoloniaApiKey}`\n    }\n    const headers: HeadersInit = {\n      'User-Agent':\n        'normalize-japanese-addresses/0.1 (+https://github.com/geolonia/normalize-japanese-addresses/)',\n    }\n    if (typeof o.length !== 'undefined' && typeof o.offset !== 'undefined') {\n      headers['Range'] = `bytes=${o.offset}-${o.offset + o.length - 1}`\n    }\n    return fetch(fileURL.toString(), {\n      headers,\n    })\n  },\n}\n\n/**\n * 正規化のためのデータを取得する\n * @param input - Path part like '東京都/文京区.json'\n * @param requestOptions - input を構造化したデータ\n */\nconst fetchOrReadFile = async (\n  input: string,\n  options?: FetchOptions,\n): Promise<FetchResponseLike> => {\n  const fileURL = new URL(`${Normalize.config.japaneseAddressesApi}${input}`)\n  if (fileURL.protocol === 'http:' || fileURL.protocol === 'https:') {\n    return requestHandlers.http(fileURL, options)\n  } else if (fileURL.protocol === 'file:') {\n    return requestHandlers.file(fileURL, options)\n  } else {\n    throw new Error(`Unknown URL schema: ${fileURL.protocol}`)\n  }\n}\n\n__internals.fetch = fetchOrReadFile\nexport const version = Normalize.version\nexport const config = Normalize.config\nexport const normalize = Normalize.normalize\n"],"names":["version","config","normalize","fs","Normalize.config","fetch","Normalize.version","Normalize.normalize"],"mappings":"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IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACtB,IAAA,EAA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","x_google_ignoreList":[0]}